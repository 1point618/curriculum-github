title: Introduction to GitHub
pre-requisites: 
learning-objective: Learn about GitHub and The GitHub Workflow
screens:
  - image-slide:
      title: "Using GitHub"
      image: blank.png
      presenter-script: |
        ## What is GitHub?

        GitHub is a place to collaborate on projects online. It's built specificially with software projects in mind, but will work for any project where most of what you're collaborating on are plain text files.

        Underneath GitHub is a piece of software called Git. Git is a Version Control System (VCS) that lets you track changes in your files over time and revert to older versions of your project if you ever need to. Git also makes it easy to let multiple people work on the same project at the same time without losing work.

        GitHub extends Git's collaboration functionality by adding productivity and communication tools. 

        * Issues can be used to track bugs or discuss new features. 
        * Pull Requests let you discuss sets of changes before incorporating them into the main project. 
        * The Pulse and Graphs let you see how the project is progressing and who has been working on what. 

        In this course, you'll learn more about how to use these features yourself.


        ## The GitHub Workflow

        GitHub suggests a specific way of using their features in order to collaborate with your team. This is called The GitHub Workflow, and is as much about a culture of collaboration as it is about using a specific technology. In collaborative projects culture is very important, because that's the human side of how work will actually get done.

        ![The GitHub Workflow](https://raw.githubusercontent.com/1point618/curriculum-github/master/images/github-flow.png)

        The GitHub Workflow is pretty simple. 
        
        1. When building something new in the project, this work should be done off to the side on a `branch`, not in the main code base. 
        2. Once work is ready to be shown to others, you should create a Pull Request (PR) to start a conversation about the changes. 
        3. Your teammates should look through your work and give you feedback on the PR, and you should take action on that feedback. 
        4. Once everyone is agreed that the work is completed, you should `merge` (bring back) the work into the main branch and delete the branch you were working on.

        <div class='container' data-video-url='https://youtu.be/PBI2Rz-ZOxU'></div>

        Let's learn more about each step in this process and actually practice it directly on GitHub. Scroll to the top and click on the "next" button to continue.
additional-labs:
additional-questions:
resources: